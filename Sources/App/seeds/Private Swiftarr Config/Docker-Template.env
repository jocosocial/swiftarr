# This is the TEMPLATE for making Swiftarr config files in Docker. The values in this file get set as environment vars
# (with setenv()) during Swiftarr app startup and are referenced in the Docker-Compose files and/or scripts.
# If you haven't yet, you should make copies of this file, named `development.env` and `production.env`, and set up
# passwords for the databases and admin users.
#
# Swiftarr's git repo is set up so that any new files in `/Sources/App/seeds/Private Swiftarr Config` are ignored.
# The .env files with sensitive passwords in them should not get checked in.

# Heroku note: Heroku sets DATABASE_URL, REDIS_URL, and (I think) PORT with appropritate values. Don't override
# them in a Heroku config.

# Environment
#
# ENVIRONMENT: String of the environment name. Usually "development" or "production".
#              Should match the name of this file.
#              Examples: "development", "production"
ENVIRONMENT=

# Postgres DB Access
#
# DATABASE_URL: Complete connection string for connecting to the database.
#               Examples: "postgresql://swiftarr:password@localhost:5432/swiftarr"
#
# DATABASE_USER: Username to connect to the database.
#                Examples: "swiftarr"
DATABASE_USER=swiftarr
#
# DATABASE_HOSTNAME: Hostname (or IP) of the database server to connect to.
#                    Examples: "localhost", "postgres"
DATABASE_HOSTNAME=postgres
#
# DATABASE_PORT: TCP port of the database to connect to.
#                Examples: 5432
DATABASE_PORT=5432
#
# DATABASE_DB: Name of the database on the database server to connect to.
#              Examples: "swiftarr"
DATABASE_DB=swiftarr
#
# DATABASE_PASSWORD: Password matching the username to connect to the database.
#                    Examples: "SoonTM", "password"
DATABASE_PASSWORD=
#
# AUTO_MIGRATE: Boolean of whether to automatically run the schema migration on startup.
#               If you set this to false, the server will fail to start and you are responsible
#               for initiating the initial migration yourself.
#               Examples: true, false
AUTO_MIGRATE=true
#
# DATABASE_TIMEOUT: Seconds for a database transaction to take before being considered dead.
#                   Should be relatively small (default: 10) for production but there are
#                   reasons it could be big in certain cases.
#                   Examples: 10, 60
#DATABASE_TIMEOUT=10

# Redis db access
#
# REDIS_URL: Full connection string used to communicate with a Redis server.
#            Examples: "redis://localhost:6379"
#
# REDIS_HOSTNAME: Hostname (or IP) of the Redis server to connect to.
#                 Examples: "localhost"
REDIS_HOSTNAME=redis
#
# REDIS_PORT: TCP port of the Redis server to connect to.
#             Examples: 6379
REDIS_PORT=6379
#
# REDIS_PASSWORD: Password used to communicate with the Redis server.
#                 Examples: "RedDISS", "password"
REDIS_PASSWORD=password

# HTTP Server Setup
#
# SWIFTARR_PORT: TCP port for the Vapor webserver to listen on.
#                Examples: 8081
SWIFTARR_PORT=8081
#
# SWIFTARR_IP: Local IP address to listen on.
#              Examples: "0.0.0.0" (all), "127.0.0.1" (localhost)
SWIFTARR_IP=0.0.0.0
#
# SWIFTARR_USER_IMAGES: Root directory for storing user-uploaded images.
#                       These images are referenced by filename in the db.
#                       Examples: "~/swiftarr/Images", "/app/images"
SWIFTARR_USER_IMAGES=/app/images
#
# SWIFTARR_PORT_TIMEZONE: Swift TimeZone identifier of the time zone in which
#                         the cruise departs. Used for calculating the schedule.
#                         Internally defaults to America/New_York aka Eastern
#                         Standard Time.
#                         Examples: "America/New_York", "America/Los_Angeles"
# SWIFTARR_PORT_TIMEZONE="America/New_York"
#
# SWIFTARR_START_DATE: Date on which the cruise departs (yyyy-MM-dd).
#                      Internally defaults to some real sail date in the past.
#                      Examples: "2023-03-05", "2020-03-07"
# SWIFTARR_START_DATE="2023-03-05"
#
# LOG_LEVEL: Runtime log level. Standard values from https://github.com/apple/swift-log#log-levels
#            are accepted.
#            Examples: "debug", "notice", "info"
LOG_LEVEL=info
#
# SWIFTARR_CANONICAL_HOSTNAMES: comma-seperated list of hostnames that Twitarr listens for.
#                               Used for link processing. Set to empty to disable all canonical processing.
#                               Examples: "twitarr.com,joco.hollandamerica.com,localhost"
# SWIFTARR_CANONICAL_HOSTNAMES=

# Server Passwords
#
# ADMIN_PASSWORD: Default password for the admin account.
#                 Examples: "JoCoCruise"
ADMIN_PASSWORD=
#
# ADMIN_RECOVERY_KEY: Recovery key for the admin account.
#                     Examples: "Dont Touch Your Face"
ADMIN_RECOVERY_KEY=
#
# THO_PASSWORD: Default password for the THO account.
#               Examples: "HomeOffice"
THO_PASSWORD=
#
# THO_RECOVERY_KEY: Recovery key for the THO account.
#                   Examples: "Dont Touch Your Face"
THO_RECOVERY_KEY=

# Wait Configuration
#
# WAIT_HOSTS: Comma-seperated lists of host:port combinations to wait for startup.
#             Examples: "postgres:5432"
WAIT_HOSTS="postgres:5432,redis:6379"
#
# WAIT_BEFORE: Seconds to wait between execution and starting the actual checks.
#              Examples: 5, 0
WAIT_BEFORE=0
#
# WAIT_HOSTS_TIMEOUT: Seconds to wait for hosts to become available.
#                     Examples: 300
WAIT_HOSTS_TIMEOUT=300
#
# WAIT_SLEEP_INTERVAL: Seconds to wait between polls of the hosts.
#                      Examples: 5
WAIT_SLEEP_INTERVAL=5
#
# WAIT_HOST_CONNECT_TIMEOUT: Timeout waiting for a TCP connection to establish.
#                            Examples: 10
WAIT_HOST_CONNECT_TIMEOUT=10

# Container-specific variables
#
# These are internal to the various container images used in the stack and refer to other
# values here in this file. They are not documented for a reason and should generally not
# be changed.
#
# Postgres
POSTGRESQL_DATABASE=${DATABASE_DB}
POSTGRESQL_USERNAME=${DATABASE_USER}
POSTGRESQL_PASSWORD=${DATABASE_PASSWORD}
# Redis
ALLOW_EMPTY_PASSWORD=yes
